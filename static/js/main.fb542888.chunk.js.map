{"version":3,"sources":["assets/images/logo.svg","assets/icons/search--sienna.svg","assets/icons/search--concrete.svg","assets/icons/close.svg","assets/icons/place.svg","components/Location/Location.js","components/Counter/Counter.js","components/Searchbar/Searchbar.js","redux/actions/searchActions.js","components/Header/Header.js","components/Stay/Stay.js","redux/actionTypes.js","redux/actions/propertyActions.js","pages/Home/Home.js","App/App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["Location","role","city","country","onClick","className","e","src","PlaceImg","alt","Counter","onChange","title","desc","useState","count","setCount","Searchbar","onLocationChange","onSearch","results","initLocation","searchLocation","setSearchLocation","isFocus","setIsFocus","location","setLocation","adults","children","guests","setGuests","useEffect","getSearchObject","search","resultClicked","isFocusEmpty","Object","keys","length","CloseImg","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","target","onFocus","readOnly","map","result","ind","SearchImgSienna","SearchImgConcrete","matchValue","valA","valB","toLowerCase","includes","Header","history","useHistory","useParams","searchResults","setSearchResults","to","Logo","values","searchParams","URLSearchParams","set","push","pathname","toString","filteredLocations","properties","property","find","loc","Stay","image","isSuperHost","bedCount","rating","loading","GET_PROPERTIES","LOADING","getProperties","filteredProperties","filter","filterByLocation","maxGuests","filterByMaxGuests","sort","compareRatings","dispatch","propertyA","propertyB","Home","query","useLocation","useSelector","state","useDispatch","get","parseInt","TransitionGroup","component","appear","CSSTransition","timeout","photo","superHost","beds","App","basename","process","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","isLoading","middlewares","thunk","createStore","action","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.fb542888.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.beef9462.svg\";","export default __webpack_public_path__ + \"static/media/search--sienna.9b5cb03f.svg\";","export default __webpack_public_path__ + \"static/media/search--concrete.2de8c779.svg\";","export default __webpack_public_path__ + \"static/media/close.26da0fa3.svg\";","export default __webpack_public_path__ + \"static/media/place.358ad5a3.svg\";","import PropTypes from 'prop-types'\r\nimport PlaceImg from '../../assets/icons/place.svg'\r\nimport './css/Location.css'\r\n\r\nLocation.propTypes = {\r\n    city: PropTypes.string,\r\n    country: PropTypes.string,\r\n    role: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default function Location ({ role, city, country, onClick }) {\r\n    return (\r\n        <li className=\"location\" role={role} onClick={e => onClick({ city, country })}>\r\n            <img src={PlaceImg} alt=\"Location\" />\r\n            <span>{city}, {country}</span>\r\n        </li>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './css/Counter.css'\r\n\r\nCounter.propTypes = {\r\n    onChange: PropTypes.func,\r\n    title: PropTypes.string,\r\n    desc: PropTypes.string\r\n}\r\n\r\nexport default function Counter ({ onChange, title, desc }) {\r\n    const [count, setCount] = useState(0)\r\n\r\n    return (\r\n        <div className=\"counter\">\r\n            <span className=\"counter__title\">{title}</span>\r\n            <p className=\"counter__desc\">{desc}</p>\r\n            <div className=\"counter__wrapper\">\r\n                <button className=\"counter__button\"\r\n                    onClick={e => {\r\n                        if (count > 0) {\r\n                            setCount(count - 1)\r\n                        }\r\n                        onChange(count - 1)\r\n                    }}>\r\n                    -\r\n                </button>\r\n                <span className=\"counter__value\">\r\n                    {count}\r\n                </span>\r\n                <button className=\"counter__button\"\r\n                    onClick={e => {\r\n                        setCount(count + 1)\r\n                        onChange(count + 1)\r\n                    }}>\r\n                    +\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SearchImgSienna from '../../assets/icons/search--sienna.svg'\r\nimport SearchImgConcrete from '../../assets/icons/search--concrete.svg'\r\nimport CloseImg from '../../assets/icons/close.svg'\r\nimport Location from '../Location/Location'\r\nimport Counter from '../Counter/Counter'\r\nimport './css/Searchbar.css'\r\n\r\nSearchbar.propTypes = {\r\n    onLocationChange: PropTypes.func,\r\n    onSearch: PropTypes.func,\r\n    results: PropTypes.array,\r\n    initLocation: PropTypes.string\r\n}\r\n\r\nexport default function Searchbar ({ onLocationChange, onSearch, results, initLocation }) {\r\n    const [searchLocation, setSearchLocation] = useState('')//  location input value\r\n    const [isFocus, setIsFocus] = useState({})//    focus state of either location/guests input\r\n\r\n    const [location, setLocation] = useState({ city: null, country: null })//   location search params\r\n    const [guests, setGuests] = useState({ adults: 0, children: 0 })//  guests search parmas\r\n\r\n    //  set location input value\r\n    //  based on existing search params\r\n    useEffect(() => {\r\n        setSearchLocation(initLocation)\r\n    }, [initLocation])\r\n\r\n    //  run search\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        onSearch(getSearchObject())\r\n    }\r\n\r\n    //  get location/guests values to be searched\r\n    //  if they are valid\r\n    const getSearchObject = () => {\r\n        const search = {}\r\n\r\n        if (location.city !== null) {\r\n            search.location = location\r\n        }\r\n\r\n        if (guests.adults > 0 || guests.children > 0) {\r\n            search.guests = guests\r\n        }\r\n\r\n        return search\r\n    }\r\n\r\n    //  handle location result click event\r\n    const resultClicked = ({ city, country }) => {\r\n        setLocation({ city, country })\r\n        setSearchLocation(`${city}, ${country}`)\r\n    }\r\n\r\n    //  check if isFocus === {}\r\n    //  none of either location/guests input is onFocused\r\n    const isFocusEmpty = () => {\r\n        return Object.keys(isFocus).length === 0\r\n    }\r\n\r\n    return (\r\n        <div aria-live='assertive' className={`searchbar ${!isFocusEmpty() ? 'searchbar--focused' : ''}`}>\r\n            <div className=\"searchbar__header\">\r\n                <span>Edit your search</span>\r\n                <button onClick={e => setIsFocus({})}>\r\n                    <img src={CloseImg} alt=\"Close search\" />\r\n                </button>\r\n            </div>\r\n            <span className=\"aria--hide\">Search by Location and Guests</span>\r\n            <form className='searchbar__form' onSubmit={submitHandler}>\r\n                <div className=\"searchbar__group\">\r\n                    <label htmlFor=\"searchLocation\">Location</label>\r\n                    <input type=\"text\"\r\n                        id=\"searchLocation\"\r\n                        placeholder=\"Choose location\"\r\n                        value={searchLocation}\r\n                        onChange={e => {\r\n                            setSearchLocation(e.target.value)// update input value\r\n                            onLocationChange(e.target.value)//  search for location results\r\n                        }}\r\n                        onFocus={e => setIsFocus({ location: true })}\r\n                    />\r\n                </div>\r\n                <div className=\"searchbar__group\">\r\n                    <label htmlFor=\"searchGuests\">Guests</label>\r\n                    <input type=\"number\"\r\n                        id=\"searchGuests\"\r\n                        placeholder=\"Add guests\"\r\n                        value={guests.adults + guests.children}\r\n                        onFocus={e => setIsFocus({ guests: true })}\r\n                        readOnly\r\n                    />\r\n                </div>\r\n                {\r\n                    //  if location input is onFocused\r\n                    //  show location results\r\n                    isFocus.location\r\n                        ? <ul role='listbox' className=\"searchbar__locations\">\r\n                            {\r\n                                results.map((result, ind) => <Location key={ind}\r\n                                    role='listitem'\r\n                                    city={result.city}\r\n                                    country={result.country}\r\n                                    onClick={resultClicked} />)\r\n                            }\r\n                        </ul>\r\n                        : null\r\n                }\r\n                {\r\n                    //  if guests input is onFocused\r\n                    //  show guests counters\r\n                    isFocus.guests\r\n                        ? <div className=\"searchbar__counters\">\r\n                            <Counter\r\n                                title='Adults'\r\n                                desc='Ages 13 or above'\r\n                                onChange={count => setGuests({ children: guests.children, adults: count })} />\r\n                            <Counter\r\n                                title='Children'\r\n                                desc='Ages 2 - 12'\r\n                                onChange={count => setGuests({ children: count, adults: guests.adults })} />\r\n                        </div>\r\n                        : null\r\n                }\r\n                <button className=\"searchbar__submit\" type=\"submit\">\r\n                    {\r\n                        !isFocusEmpty()\r\n                            ? <img src={SearchImgConcrete} alt=\"\" />\r\n                            : <img src={SearchImgSienna} alt=\"\" />\r\n                    }\r\n                    <span>Search</span>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import properties from '../../stays.json'\r\n\r\nconst matchValue = (valA, valB) => {\r\n    return valA.toLowerCase().includes(valB.toLowerCase())\r\n}\r\n\r\nexport const searchLocation = (value) => {\r\n    const filteredLocations = []\r\n    for (const property of properties) {\r\n        if (matchValue(property.city, value) || matchValue(property.country, value)) {\r\n            const location = { city: property.city, country: property.country }\r\n            if (!filteredLocations.find(loc => loc.city === property.city)) {\r\n                filteredLocations.push(location)\r\n            }\r\n        }\r\n    }\r\n\r\n    return filteredLocations\r\n}\r\n","import { useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport Logo from '../../assets/images/logo.svg'\r\nimport Searchbar from '../Searchbar/Searchbar'\r\nimport { searchLocation } from '../../redux/actions/searchActions'\r\nimport './css/Header.css'\r\n\r\nexport default function Header () {\r\n    const history = useHistory()\r\n\r\n    const { city, country } = useParams()\r\n    const [searchResults, setSearchResults] = useState([])\r\n\r\n    const searchHandler = (values) => {\r\n        const searchParams = new URLSearchParams()\r\n        const location = values.location\r\n        if (location) {\r\n            searchParams.set('city', location.city)\r\n            searchParams.set('country', location.country)\r\n        }\r\n\r\n        const guests = values.guests\r\n        if (guests) {\r\n            searchParams.set('adults', guests.adults)\r\n            searchParams.set('children', guests.children)\r\n        }\r\n\r\n        history.push({\r\n            pathname: '/',\r\n            search: `?${searchParams.toString()}`\r\n        })\r\n    }\r\n\r\n    const onLocationChange = (value) => {\r\n        setSearchResults(searchLocation(value))\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <Link to='/'>\r\n                <img src={Logo} alt='Windbnb logo | Click to visit Homepage' />\r\n            </Link>\r\n            <Searchbar onSearch={searchHandler} onLocationChange={onLocationChange} results={searchResults} initLocation={city ? `${city}, ${country}` : ''} />\r\n        </header>\r\n    )\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport './css/Stay.css'\r\n\r\nStay.propTypes = {\r\n    image: PropTypes.string,\r\n    isSuperHost: PropTypes.bool,\r\n    type: PropTypes.string,\r\n    bedCount: PropTypes.number,\r\n    rating: PropTypes.number,\r\n    title: PropTypes.string\r\n}\r\n\r\nexport default function Stay ({ image, isSuperHost, type, bedCount, rating, title }) {\r\n    return (\r\n        <li className=\"stay\">\r\n            <h2 className=\"stay__title\">{title}</h2>\r\n            <div className=\"stay__image\">\r\n                <img loading='lazy' src={image} alt='' aria-hidden='true' />\r\n            </div>\r\n            <div className=\"stay__info\">\r\n                {\r\n                    isSuperHost\r\n                        ? <span className=\"stay__tag\">SUPER HOST</span>\r\n                        : null\r\n                }\r\n                <span className=\"stay__content\">\r\n                    {type}{bedCount !== null ? ` . ${bedCount} beds` : null}\r\n                </span>\r\n                <span className=\"stay__rating\">\r\n                    {rating}\r\n                </span>\r\n            </div>\r\n            <Link to='/'></Link>\r\n        </li>\r\n    )\r\n}\r\n","export const GET_PROPERTIES = 'GET_PROPERTIES'\r\n\r\nexport const LOADING = 'LOADING'\r\n","import {\r\n    GET_PROPERTIES,\r\n    LOADING\r\n} from '../actionTypes'\r\nimport properties from '../../stays.json'\r\n\r\nconst loadingProperties = () => {\r\n    return {\r\n        type: LOADING\r\n    }\r\n}\r\n\r\n//  filter properties by location (city & country)\r\nconst filterByLocation = (city, country, properties) => {\r\n    return properties.filter(property =>\r\n        property.city === city &&\r\n        property.country === country\r\n    )\r\n}\r\n\r\n//  filter properties by max number of guests\r\nconst filterByMaxGuests = (guests, properties) => {\r\n    return properties.filter(property =>\r\n        guests <= property.maxGuests)\r\n}\r\n\r\n//  get properties\r\n//  return all properties if city, country & guests = null\r\nexport const getProperties = (city, country, guests) => {\r\n    let filteredProperties = properties\r\n\r\n    if (city !== null) {\r\n        filteredProperties = filterByLocation(city, country, filteredProperties)\r\n    }\r\n    if (guests !== null) {\r\n        filteredProperties = filterByMaxGuests(guests, filteredProperties)\r\n    }\r\n\r\n    filteredProperties = filteredProperties.sort(compareRatings)\r\n\r\n    return dispatch => {\r\n        dispatch(loadingProperties())\r\n        dispatch({\r\n            type: GET_PROPERTIES,\r\n            properties: filteredProperties\r\n        })\r\n    }\r\n}\r\n\r\n//  for sorting by rating in descending order\r\nconst compareRatings = (propertyA, propertyB) => {\r\n    return propertyA.rating > propertyB.rating ? -1 : 1\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport Stay from '../../components/Stay/Stay'\r\nimport { getProperties } from '../../redux/actions/propertyActions'\r\n\r\nimport './css/Home.css'\r\n\r\nconst useQuery = () => {\r\n    return new URLSearchParams(useLocation().search)\r\n}\r\n\r\nexport default function Home () {\r\n    const query = useQuery()\r\n    const location = useLocation()\r\n\r\n    const { properties } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const city = query.get('city')\r\n        const country = query.get('country')\r\n        const adults = parseInt(query.get('adults'))\r\n        const children = parseInt(query.get('children'))\r\n        const maxGuests = adults ? (adults + children) : 0\r\n\r\n        dispatch(getProperties(city, country, maxGuests))\r\n    }, [location])\r\n\r\n    return (\r\n        <section className=\"home\" aria-live=\"polite\">\r\n            <div className=\"home__header\">\r\n                <h1 className=\"home__country\">\r\n                    {\r\n                        query.get('country')\r\n                            ? `Stays in ${query.get('country')}`\r\n                            : 'All stays'\r\n                    }\r\n                </h1>\r\n                <span className=\"home__count\">\r\n                    {properties.length} stays\r\n                </span>\r\n            </div>\r\n            {\r\n                properties.length > 0\r\n                    ? (\r\n                        <ul className=\"home__stays\">\r\n                            <TransitionGroup component={null} appear>\r\n                                {\r\n                                    properties.map((property, ind) =>\r\n                                        <CSSTransition key={ind} timeout={1000}>\r\n                                            <Stay\r\n                                                image={property.photo}\r\n                                                isSuperHost={property.superHost}\r\n                                                type={property.type}\r\n                                                bedCount={property.beds}\r\n                                                rating={property.rating}\r\n                                                title={property.title}\r\n                                            />\r\n                                        </CSSTransition>\r\n                                    )\r\n                                }\r\n                            </TransitionGroup>\r\n                        </ul>\r\n                    )\r\n                    : <span>No results</span>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Header from '../components/Header/Header'\nimport Home from '../pages/Home/Home'\nimport './css/App.css'\n\nexport default function App () {\n    return (\n        <div className=\"App\">\n            <Router basename={process.env.PUBLIC_URL}>\n                <Header />\n                <main>\n                    <Switch>\n                        <Route path=\"/\">\n                            <Home />\n                        </Route>\n                    </Switch>\n                </main>\n            </Router>\n        </div>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import {\r\n    GET_PROPERTIES,\r\n    LOADING\r\n} from './actionTypes'\r\n\r\nconst initialState = {\r\n    properties: [],\r\n    isLoading: false\r\n}\r\n\r\nexport default function reducer (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_PROPERTIES:\r\n            return {\r\n                ...state,\r\n                properties: action.properties,\r\n                isLoading: false\r\n            }\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducer'\r\n\r\nconst middlewares = [thunk]\r\n\r\nexport default createStore(\r\n    reducer,\r\n    compose(\r\n        applyMiddleware(...middlewares),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/css/index.css'\nimport App from './App/App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}