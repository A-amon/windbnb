{"version":3,"sources":["assets/images/logo.svg","assets/icons/search--sienna.svg","assets/icons/search--concrete.svg","assets/icons/close.svg","assets/icons/place.svg","components/Location/Location.js","components/Counter/Counter.js","components/Searchbar/Searchbar.js","redux/actions/searchActions.js","components/Header/Header.js","components/Stay/Stay.js","redux/actionTypes.js","redux/actions/propertyActions.js","pages/Home/Home.js","App/App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["Location","role","city","country","onClick","className","e","src","PlaceImg","alt","Counter","onChange","title","desc","initVal","useState","count","setCount","useEffect","Searchbar","onLocationChange","onSearch","results","initLocation","initGuests","searchLocation","setSearchLocation","isFocus","setIsFocus","location","setLocation","adults","children","guests","setGuests","console","log","getSearchObject","search","resultClicked","isFocusEmpty","Object","keys","length","CloseImg","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","target","onFocus","readOnly","map","result","ind","SearchImgSienna","SearchImgConcrete","matchValue","valA","valB","toLowerCase","includes","Header","setCity","setCountry","setAdults","setChildren","query","URLSearchParams","useLocation","history","useHistory","searchResults","setSearchResults","get","parseInt","to","Logo","values","searchParams","set","push","pathname","toString","filteredLocations","properties","property","find","loc","Stay","image","isSuperHost","bedCount","rating","loading","GET_PROPERTIES","LOADING","getProperties","filteredProperties","filter","filterByLocation","maxGuests","filterByMaxGuests","sort","compareRatings","dispatch","propertyA","propertyB","Home","useSelector","state","useDispatch","TransitionGroup","component","appear","CSSTransition","timeout","photo","superHost","beds","App","basename","process","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","isLoading","middlewares","thunk","createStore","action","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.749ae902.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.beef9462.svg\";","export default __webpack_public_path__ + \"static/media/search--sienna.9b5cb03f.svg\";","export default __webpack_public_path__ + \"static/media/search--concrete.2de8c779.svg\";","export default __webpack_public_path__ + \"static/media/close.26da0fa3.svg\";","export default __webpack_public_path__ + \"static/media/place.358ad5a3.svg\";","import PropTypes from 'prop-types'\r\nimport PlaceImg from '../../assets/icons/place.svg'\r\nimport './css/Location.css'\r\n\r\nLocation.propTypes = {\r\n    city: PropTypes.string,\r\n    country: PropTypes.string,\r\n    role: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default function Location ({ role, city, country, onClick }) {\r\n    return (\r\n        <li className=\"location\" role={role} onClick={e => onClick({ city, country })}>\r\n            <img src={PlaceImg} alt=\"Location\" />\r\n            <span>{city}, {country}</span>\r\n        </li>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './css/Counter.css'\r\n\r\nCounter.propTypes = {\r\n    onChange: PropTypes.func,\r\n    title: PropTypes.string,\r\n    desc: PropTypes.string,\r\n    initVal: PropTypes.number\r\n}\r\n\r\nexport default function Counter ({ onChange, title, desc, initVal }) {\r\n    const [count, setCount] = useState(0)\r\n\r\n    //  use initial value if available\r\n    useEffect(() => {\r\n        if (initVal) {\r\n            setCount(initVal)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"counter\">\r\n            <span className=\"counter__title\">{title}</span>\r\n            <p className=\"counter__desc\">{desc}</p>\r\n            <div className=\"counter__wrapper\">\r\n                <button className=\"counter__button\"\r\n                    onClick={e => {\r\n                        if (count > 0) {\r\n                            setCount(count - 1)\r\n                        }\r\n                        onChange(count - 1)\r\n                    }}>\r\n                    -\r\n                </button>\r\n                <span className=\"counter__value\">\r\n                    {count}\r\n                </span>\r\n                <button className=\"counter__button\"\r\n                    onClick={e => {\r\n                        setCount(count + 1)\r\n                        onChange(count + 1)\r\n                    }}>\r\n                    +\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SearchImgSienna from '../../assets/icons/search--sienna.svg'\r\nimport SearchImgConcrete from '../../assets/icons/search--concrete.svg'\r\nimport CloseImg from '../../assets/icons/close.svg'\r\nimport Location from '../Location/Location'\r\nimport Counter from '../Counter/Counter'\r\nimport './css/Searchbar.css'\r\n\r\nSearchbar.propTypes = {\r\n    onLocationChange: PropTypes.func,\r\n    onSearch: PropTypes.func,\r\n    results: PropTypes.array,\r\n    initLocation: PropTypes.object,\r\n    initGuests: PropTypes.object\r\n}\r\n\r\nexport default function Searchbar ({ onLocationChange, onSearch, results, initLocation, initGuests }) {\r\n    const [searchLocation, setSearchLocation] = useState('')//  location input value\r\n    const [isFocus, setIsFocus] = useState({})//    focus state of either location/guests input\r\n\r\n    const [location, setLocation] = useState({ city: null, country: null })//   location search params\r\n    const [guests, setGuests] = useState({ adults: 0, children: 0 })//  guests search parmas\r\n\r\n    //  set location input value\r\n    //  based on existing search params\r\n    useEffect(() => {\r\n        const { city, country } = initLocation\r\n        if (city && country) {\r\n            setLocation({ city, country })\r\n            setSearchLocation(`${city}, ${country}`)\r\n        }\r\n\r\n        const { adults, children } = initGuests\r\n        if (adults || children) {\r\n            console.log(adults, children)\r\n            setGuests({ adults, children })\r\n        }\r\n    }, [initLocation])\r\n\r\n    //  run search\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        onSearch(getSearchObject())\r\n    }\r\n\r\n    //  get location/guests values to be searched\r\n    //  if they are valid\r\n    const getSearchObject = () => {\r\n        const search = {}\r\n\r\n        if (location.city !== null) {\r\n            search.location = location\r\n        }\r\n\r\n        if (guests.adults > 0 || guests.children > 0) {\r\n            search.guests = guests\r\n        }\r\n\r\n        return search\r\n    }\r\n\r\n    //  handle location result click event\r\n    const resultClicked = ({ city, country }) => {\r\n        setLocation({ city, country })\r\n        setSearchLocation(`${city}, ${country}`)\r\n    }\r\n\r\n    //  check if isFocus === {}\r\n    //  none of either location/guests input is onFocused\r\n    const isFocusEmpty = () => {\r\n        return Object.keys(isFocus).length === 0\r\n    }\r\n\r\n    return (\r\n        <div aria-live='assertive' className={`searchbar ${!isFocusEmpty() ? 'searchbar--focused' : ''}`}>\r\n            <div className=\"searchbar__header\">\r\n                <span>Edit your search</span>\r\n                <button onClick={e => setIsFocus({})}>\r\n                    <img src={CloseImg} alt=\"Close search\" />\r\n                </button>\r\n            </div>\r\n            <span className=\"aria--hide\">Search by Location and Guests</span>\r\n            <form className='searchbar__form' onSubmit={submitHandler}>\r\n                <div className=\"searchbar__group\">\r\n                    <label htmlFor=\"searchLocation\">Location</label>\r\n                    <input type=\"text\"\r\n                        id=\"searchLocation\"\r\n                        placeholder=\"Choose location\"\r\n                        value={searchLocation}\r\n                        onChange={e => {\r\n                            setSearchLocation(e.target.value)// update input value\r\n                            onLocationChange(e.target.value)//  search for location results\r\n                        }}\r\n                        onFocus={e => setIsFocus({ location: true })}\r\n                    />\r\n                </div>\r\n                <div className=\"searchbar__group\">\r\n                    <label htmlFor=\"searchGuests\">Guests</label>\r\n                    <input type=\"number\"\r\n                        id=\"searchGuests\"\r\n                        placeholder=\"Add guests\"\r\n                        value={(guests.adults + guests.children === 0// show placeholder when adults + children = 0\r\n                            ? false\r\n                            : guests.adults + guests.children)}\r\n                        onFocus={e => setIsFocus({ guests: true })}\r\n                        readOnly\r\n                    />\r\n                </div>\r\n                {\r\n                    //  if location input is onFocused\r\n                    //  show location results\r\n                    isFocus.location\r\n                        ? <ul role='listbox' className=\"searchbar__locations\">\r\n                            {\r\n                                results.map((result, ind) => <Location key={ind}\r\n                                    role='listitem'\r\n                                    city={result.city}\r\n                                    country={result.country}\r\n                                    onClick={resultClicked} />)\r\n                            }\r\n                        </ul>\r\n                        : null\r\n                }\r\n                {\r\n                    //  if guests input is onFocused\r\n                    //  show guests counters\r\n                    isFocus.guests\r\n                        ? <div className=\"searchbar__counters\">\r\n                            <Counter\r\n                                title='Adults'\r\n                                desc='Ages 13 or above'\r\n                                initVal={guests.adults}\r\n                                onChange={count => setGuests({ children: guests.children, adults: count })} />\r\n                            <Counter\r\n                                title='Children'\r\n                                desc='Ages 2 - 12'\r\n                                initVal={guests.children}\r\n                                onChange={count => setGuests({ children: count, adults: guests.adults })} />\r\n                        </div>\r\n                        : null\r\n                }\r\n                <button className=\"searchbar__submit\" type=\"submit\">\r\n                    {\r\n                        !isFocusEmpty()\r\n                            ? <img src={SearchImgConcrete} alt=\"\" />\r\n                            : <img src={SearchImgSienna} alt=\"\" />\r\n                    }\r\n                    <span>Search</span>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import properties from '../../stays.json'\r\n\r\nconst matchValue = (valA, valB) => {\r\n    return valA.toLowerCase().includes(valB.toLowerCase())\r\n}\r\n\r\nexport const searchLocation = (value) => {\r\n    const filteredLocations = []\r\n    for (const property of properties) {\r\n        if (matchValue(property.city, value) || matchValue(property.country, value)) {\r\n            const location = { city: property.city, country: property.country }\r\n            if (!filteredLocations.find(loc => loc.city === property.city)) {\r\n                filteredLocations.push(location)\r\n            }\r\n        }\r\n    }\r\n\r\n    return filteredLocations\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport Logo from '../../assets/images/logo.svg'\r\nimport Searchbar from '../Searchbar/Searchbar'\r\nimport { searchLocation } from '../../redux/actions/searchActions'\r\nimport './css/Header.css'\r\n\r\nconst useQuery = () => {\r\n    return new URLSearchParams(useLocation().search)\r\n}\r\n\r\nexport default function Header () {\r\n    const [city, setCity] = useState(null)\r\n    const [country, setCountry] = useState(null)\r\n    const [adults, setAdults] = useState(0)\r\n    const [children, setChildren] = useState(0)\r\n\r\n    const query = useQuery()\r\n    const location = useLocation()\r\n\r\n    const history = useHistory()\r\n\r\n    const [searchResults, setSearchResults] = useState([])\r\n\r\n    //  update states when route changes\r\n    useEffect(() => {\r\n        setCity(query.get('city'))\r\n        setCountry(query.get('country'))\r\n        setAdults(parseInt(query.get('adults')))\r\n        setChildren(parseInt(query.get('children')))\r\n    }, [location])\r\n\r\n    //  update URL search params\r\n    const searchHandler = (values) => {\r\n        const searchParams = new URLSearchParams()\r\n        const location = values.location\r\n        if (location) {\r\n            searchParams.set('city', location.city)\r\n            searchParams.set('country', location.country)\r\n        }\r\n\r\n        const guests = values.guests\r\n        if (guests) {\r\n            searchParams.set('adults', guests.adults)\r\n            searchParams.set('children', guests.children)\r\n        }\r\n\r\n        history.push({\r\n            pathname: '/',\r\n            search: `?${searchParams.toString()}`\r\n        })\r\n    }\r\n\r\n    //  run search\r\n    const onLocationChange = (value) => {\r\n        setSearchResults(searchLocation(value))\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <Link to='/'>\r\n                <img src={Logo} alt='Windbnb logo | Click to visit Homepage' />\r\n            </Link>\r\n            <Searchbar onSearch={searchHandler}\r\n                onLocationChange={onLocationChange}\r\n                results={searchResults}\r\n                initLocation={{ city, country }}\r\n                initGuests={{ adults, children }} />\r\n        </header>\r\n    )\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport './css/Stay.css'\r\n\r\nStay.propTypes = {\r\n    image: PropTypes.string,\r\n    isSuperHost: PropTypes.bool,\r\n    type: PropTypes.string,\r\n    bedCount: PropTypes.number,\r\n    rating: PropTypes.number,\r\n    title: PropTypes.string\r\n}\r\n\r\nexport default function Stay ({ image, isSuperHost, type, bedCount, rating, title }) {\r\n    return (\r\n        <li className=\"stay\">\r\n            <h2 className=\"stay__title\">{title}</h2>\r\n            <div className=\"stay__image\">\r\n                <img loading='lazy' src={image} alt='' aria-hidden='true' />\r\n            </div>\r\n            <div className=\"stay__info\">\r\n                {\r\n                    isSuperHost\r\n                        ? <span className=\"stay__tag\">SUPER HOST</span>\r\n                        : null\r\n                }\r\n                <span className=\"stay__content\">\r\n                    {type}{bedCount !== null ? ` . ${bedCount} beds` : null}\r\n                </span>\r\n                <span className=\"stay__rating\">\r\n                    {rating}\r\n                </span>\r\n            </div>\r\n            <Link to='/'></Link>\r\n        </li>\r\n    )\r\n}\r\n","export const GET_PROPERTIES = 'GET_PROPERTIES'\r\n\r\nexport const LOADING = 'LOADING'\r\n","import {\r\n    GET_PROPERTIES,\r\n    LOADING\r\n} from '../actionTypes'\r\nimport properties from '../../stays.json'\r\n\r\nconst loadingProperties = () => {\r\n    return {\r\n        type: LOADING\r\n    }\r\n}\r\n\r\n//  filter properties by location (city & country)\r\nconst filterByLocation = (city, country, properties) => {\r\n    return properties.filter(property =>\r\n        property.city === city &&\r\n        property.country === country\r\n    )\r\n}\r\n\r\n//  filter properties by max number of guests\r\nconst filterByMaxGuests = (guests, properties) => {\r\n    return properties.filter(property =>\r\n        guests <= property.maxGuests)\r\n}\r\n\r\n//  get properties\r\n//  return all properties if city, country & guests = null\r\nexport const getProperties = (city, country, guests) => {\r\n    let filteredProperties = properties\r\n\r\n    if (city !== null) {\r\n        filteredProperties = filterByLocation(city, country, filteredProperties)\r\n    }\r\n    if (guests !== null) {\r\n        filteredProperties = filterByMaxGuests(guests, filteredProperties)\r\n    }\r\n\r\n    filteredProperties = filteredProperties.sort(compareRatings)\r\n\r\n    return dispatch => {\r\n        dispatch(loadingProperties())\r\n        dispatch({\r\n            type: GET_PROPERTIES,\r\n            properties: filteredProperties\r\n        })\r\n    }\r\n}\r\n\r\n//  for sorting by rating in descending order\r\nconst compareRatings = (propertyA, propertyB) => {\r\n    return propertyA.rating > propertyB.rating ? -1 : 1\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport Stay from '../../components/Stay/Stay'\r\nimport { getProperties } from '../../redux/actions/propertyActions'\r\n\r\nimport './css/Home.css'\r\n\r\nconst useQuery = () => {\r\n    return new URLSearchParams(useLocation().search)\r\n}\r\n\r\nexport default function Home () {\r\n    const query = useQuery()\r\n    const location = useLocation()\r\n\r\n    const { properties } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const city = query.get('city')\r\n        const country = query.get('country')\r\n        const adults = parseInt(query.get('adults'))\r\n        const children = parseInt(query.get('children'))\r\n        const maxGuests = adults ? (adults + children) : 0\r\n\r\n        dispatch(getProperties(city, country, maxGuests))\r\n    }, [location])\r\n\r\n    return (\r\n        <section className=\"home\" aria-live=\"polite\">\r\n            <div className=\"home__header\">\r\n                <h1 className=\"home__country\">\r\n                    {\r\n                        query.get('country')\r\n                            ? `Stays in ${query.get('country')}`\r\n                            : 'All stays'\r\n                    }\r\n                </h1>\r\n                <span className=\"home__count\">\r\n                    {properties.length} stays\r\n                </span>\r\n            </div>\r\n            {\r\n                properties.length > 0\r\n                    ? (\r\n                        <ul className=\"home__stays\">\r\n                            <TransitionGroup component={null} appear>\r\n                                {\r\n                                    properties.map((property, ind) =>\r\n                                        <CSSTransition key={ind} timeout={1000}>\r\n                                            <Stay\r\n                                                image={property.photo}\r\n                                                isSuperHost={property.superHost}\r\n                                                type={property.type}\r\n                                                bedCount={property.beds}\r\n                                                rating={property.rating}\r\n                                                title={property.title}\r\n                                            />\r\n                                        </CSSTransition>\r\n                                    )\r\n                                }\r\n                            </TransitionGroup>\r\n                        </ul>\r\n                    )\r\n                    : <span>No results</span>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Header from '../components/Header/Header'\nimport Home from '../pages/Home/Home'\nimport './css/App.css'\n\nexport default function App () {\n    return (\n        <div className=\"App\">\n            <Router basename={process.env.PUBLIC_URL}>\n                <Header />\n                <main>\n                    <Switch>\n                        <Route path=\"/\">\n                            <Home />\n                        </Route>\n                    </Switch>\n                </main>\n            </Router>\n        </div>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import {\r\n    GET_PROPERTIES,\r\n    LOADING\r\n} from './actionTypes'\r\n\r\nconst initialState = {\r\n    properties: [],\r\n    isLoading: false\r\n}\r\n\r\nexport default function reducer (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_PROPERTIES:\r\n            return {\r\n                ...state,\r\n                properties: action.properties,\r\n                isLoading: false\r\n            }\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducer'\r\n\r\nconst middlewares = [thunk]\r\n\r\nexport default createStore(\r\n    reducer,\r\n    compose(\r\n        applyMiddleware(...middlewares),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/css/index.css'\nimport App from './App/App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}